{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/confirmPasswordValidator.ts","./src/app/dynamicAgeValidatorControl.ts","./src/app/emp1/emp1.component.ts","./src/app/emp1/emp1.component.html","./src/app/emp2/emp2.component.ts","./src/app/emp2/emp2.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/manage-questions.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/start/start.component.ts","./src/app/start/start.component.html","./src/app/talk-with-db.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/validation/validation.component.ts","./src/app/validation/validation.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ResultComponent } from './result/result.component';\nimport { ValidationComponent } from './validation/validation.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { TestComponent } from './test/test.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { StartComponent } from './start/start.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path:\"login\", component:LoginComponent},\n  {path:\"signup\", component:SignUpComponent},\n  {path:\"start\", component:StartComponent},\n  {path:\"test/:qId\", component:TestComponent},\n  {path:\"result\", component:ResultComponent},\n  {path:\"validation\", component:ValidationComponent},\n  {path:\"\", redirectTo:\"/login\", pathMatch:\"full\"},\n  {path:\"**\", component:PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'onlineTest';\n}\n","\n<div class=\"row\">\n  <div class=\"col-12\">\n\n    <router-outlet> </router-outlet>\n    <!-- <app-validation></app-validation> -->\n\n  </div>\n</div>","import { ManageQuestionsService } from './manage-questions.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FormsModule} from '@angular/forms';\n\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {TalkWithDbService} from \"./talk-with-db.service\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { StartComponent } from './start/start.component';\nimport { TestComponent } from './test/test.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ValidationComponent } from './validation/validation.component';\nimport { ResultComponent } from './result/result.component';\nimport { Emp1Component } from './emp1/emp1.component';\nimport { Emp2Component } from './emp2/emp2.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    StartComponent,\n    TestComponent,\n    SignUpComponent,\n    PageNotFoundComponent,\n    ValidationComponent,\n    ResultComponent,\n    Emp1Component,\n    Emp2Component\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ManageQuestionsService, TalkWithDbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AbstractControl, FormControl } from '@angular/forms';\r\n\r\nexport function confirmPasswordValidator (password, confirmPassword)\r\n{\r\n    return (control: FormControl)=>{\r\n        if(!control)\r\n        {\r\n            return null;\r\n        }\r\n        console.log(control.get(password).value==control.get(confirmPassword).value ? null : {confirmPasswordValidator:true});\r\n        return control.get(password).value==control.get(confirmPassword).value ? null : {confirmPasswordValidator:true};\r\n    }\r\n}","import {AbstractControl} from '@angular/forms';\r\n\r\n\r\nexport function dynamicAgeValidator (minAge:number, maxAge:number)\r\n{\r\n    return ( function (control: AbstractControl)\r\n    {\r\n        if(control.value!=null && (control.value<minAge || control.value>maxAge ))\r\n        {\r\n            return ({dynamicAgeValidator:true});\r\n        }\r\n        return null;\r\n    });\r\n}\r\n","import { TalkWithDbService } from './../talk-with-db.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emp1',\n  templateUrl: './emp1.component.html',\n  styleUrls: ['./emp1.component.css']\n})\nexport class Emp1Component implements OnInit {\n  empArray;\n  constructor(public talkWithDbService:TalkWithDbService) { }\n\n  ngOnInit(): void {\n    this.talkWithDbService.getAllEmployees()\n    .subscribe(\n      (data)=>{\n        console.log(data);\n        this.empArray=data;\n      },\n      (err)=>{\n        console.log(err);\n      }\n    )\n  }\n\n}\n","<p>emp1 works!</p>\n\n<div *ngIf =\"empArray.length>0; then ifTemplate; else elseTemplate\"></div>\n<ng-template #elseTemplate>\n    <div>\n        loading....\n    </div>\n</ng-template>\n\n\n<ng-template #ifTemplate> \n<table>\n    <thead>\n    <tr>\n        <th>Emp Id</th>\n        <th>Emp Name</th>\n        <th>Salary</th>\n    </tr>\n    </thead>\n    <tbody>\n <tr *ngFor=\"let emp of empArray\">\n\n<td>{{emp.empId}}</td>\n<td>{{emp.empName}}</td>\n<td>{{emp.salary}}</td>\n<td>{{emp.deptId}}</td>\n\n\n\n</tr>\n</tbody>\n</table>\n</ng-template>","import { TalkWithDbService } from './../talk-with-db.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-emp2',\n  templateUrl: './emp2.component.html',\n  styleUrls: ['./emp2.component.css']\n})\nexport class Emp2Component implements OnInit {\n  empObservables$:Observable<any>;\n  constructor(public talkWithDbService:TalkWithDbService) { }\n\n  ngOnInit(): void {\n    this.empObservables$=this.talkWithDbService.getAllEmployees();\n  }\n\n}\n","<p>emp2 works!</p>\n<table>\n    <thead>\n    <tr>\n        <th>Emp Id</th>\n        <th>Emp Name</th>\n        <th>Salary</th>\n    </tr>\n    </thead>\n    <tbody>\n <tr *ngFor=\"let emp of empObservables$|async\">\n\n<td>{{emp.empId}}</td>\n<td>{{emp.empName}}</td>\n<td>{{emp.salary}}</td>\n<td>{{emp.deptId}}</td>\n\n\n\n</tr>\n</tbody>\n</table>","import { TalkWithDbService } from './../talk-with-db.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule, FormGroup,  FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userValidationFailMessage:string;\n\n  loginForm = new FormGroup({\n    userName:new FormControl(\"\", Validators.required),\n    password: new FormControl(\"\", [Validators.required, Validators.pattern(/[^0-9a-zA-Z]/), Validators.minLength(8)])\n  })\n\n  constructor(public router: Router, public talkWithDbService: TalkWithDbService) { }\n\n  ngOnInit(): void {\n  }\n\n  signUpEventHandler()\n  {\n    this.router.navigateByUrl('/signup');\n  }\n\n  loginEventHandler()\n  {\n    var user={userName : this.loginForm.value.userName, \n              password: this.loginForm.value.password\n            };\n    this.talkWithDbService.doUserValidation(user)\n    .subscribe(\n      (data)=>{\n        console.log(data);\n        var tempObj : any = data[\"message\"];\n        if(tempObj == true)\n        {\n          this.router.navigateByUrl('/start');\n        }\n        else\n        {\n          this.userValidationFailMessage=\"Please enter the correct Username and password\";\n        }\n      },\n      (err)=>{\n        console.log(err);\n      });\n    \n  }\n\n}\n","<!-- <p>login works!</p> -->\n\n<div class=\"container-fluid\" id=\"full\" >\n    <div class=\"row mt-5\">\n\n        <div class=\"col-md-1\">\n\n        </div>\n      \n        <div class=\"col-md-5 col-sm-12 text-center mt-2 mb-2\">\n            <img src=\"../assets/log.jpg\" class=\"img-fluid\" alt=\"pic\" id=\"log\" >\n        </div>\n\n        <div class=\"col-md-5 col-sm-12 align-self-center\" id=\"loginDiv\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h1 id=\"site\">Hack India</h1>\n                </div>\n            </div>\n\n            \n        \n            <div class=\"row justify-content-around\">\n                <div class=\"col-7\" id=\"loginSection\">\n\n                    <form class=\"row\" [formGroup]=\"loginForm\">\n                        <div class=\"form-group col-10 offset-1 mt-4\" >\n                            <input class=\"form-control\" formControlName=\"userName\" id=\"username\" type=\"text\"\n                             name=\"userName\" placeholder=\"Enter your username\">\n                            \n                            <div *ngIf=\"loginForm.get('userName').errors?.required && (loginForm.get('userName').touched || !loginForm.get('userName').pristine)\">\n                                <p id='cb2'> Username is required.</p>\n                            </div>\n\n                        </div>\n                        <div class=\"form-group col-10 offset-1\">\n                            <input class=\"form-control\" formControlName=\"password\" id=\"password\" type=\"password\" name=\"password\"\n                             placeholder=\"Enter your password\">\n\n                            <div *ngIf=\"loginForm.get('password').errors?.required && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                                <p id='cb2'> Password is required. </p>\n                            </div>\n                            <div *ngIf=\"loginForm.get('password').errors?.minlength && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                                <p id='cb2'> Minimum length of password must be 8. </p>\n                            </div>\n                            <div *ngIf=\"!loginForm.get('password').errors?.minlength && loginForm.get('password').errors?.pattern\" >\n                                <p id='cb2'> Password must contain a special character. </p>\n                            </div>\n\n                        </div>\n                        <div class=\"form-group col-10 offset-1\">\n                            <input type=\"checkbox\"><label class=\"ml-1\" id=\"cb\">Remember me</label>\n                        </div>\n\n                        <div class=\"justify-content around\">\n                            <h6 id =\"errormessage\" class=\"ml-5 text-color:wheat\"> <p style=\"color: aliceblue;\">{{userValidationFailMessage}}</p> </h6>\n                        </div>\n                    \n                        <div class=\"form-group col-10 offset-1\">\n                            <input class=\"btn btn-info w-100 \" type=\"button\" value=\"Login\" [disabled]=\"!loginForm.valid\"\n                            (click)=\"loginEventHandler()\">\n                        </div>\n                        <div class=\"form-group col-10 offset-1\">\n                            <input class=\"btn btn-info w-100\" type=\"button\" value=\"Login with Google\">\n                        </div>\n                        <div class=\"form-group col-10 offset-1\" >\n                            <input class=\"btn btn-info w-100\" type=\"button\" value=\"Sign Up\"\n                            (click)=\"signUpEventHandler()\">\n                        </div>\n                    </form>\n                    \n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { TalkWithDbService } from './talk-with-db.service';\nimport { Question } from './question';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class ManageQuestionsService {\n  qArray:Question[] = new Array();\n  // selectAnsArray = new Array();\n  constructor(public talkWithDbService:TalkWithDbService) { \n\n    // this.talkWithDbService.getAllQuestions()\n    //   .subscribe(\n    //     (data)=>{\n    //       console.log(data);\n    //       this.qArray=data as Question[];\n    //     },\n    //     (err)=>{\n    //       console.log(err);\n    //     });\n\n    // this.qArray.push(new Question(1,\"The Dampier-Hodges line is related to which of the following\",\"Bay of Cambay\",\"Palk Strait\",\"Andaman and Nicobar Islands\",\"Sundarbans\",\"Sundarbans\", \"\"));\n    // this.qArray.push(new Question(2,\"Which of the following regions in India represents lowest altitude\",\"Kuttanad region in Kerala\",\"Saurashtra Region in Karnataka\",\"Coromandel of Tamil Nadu\",\"Malabar region of Kerala\",\"Malabar region of Kerala\", \"\"));\n    // this.qArray.push(new Question(3,\"“Satmala Hills” are located in which among the following states\",\"Gujarat\",\"Uttar Pradesh\",\"Maharasthra\",\"Rajasthan\",\"Maharasthra\", \"\"));\n    // this.qArray.push(new Question(4,\"In Which state of India , maximum Diamond Mines are found?\",\"Bihar & Uttar Pradesh\",\"Uttar Pradesh & Jharkhand\",\"Madhya Pradesh & Andhra Pradesh\",\"Uttar Pradesh & Maharastra\",\"Uttar Pradesh & Maharastra\", \"\"));\n    // this.qArray.push(new Question(5,\"Which among the following rivers rises from the Milam Glacier in Kumaon Himalaya\",\"Sharda\",\"Ramganga\",\"Gori Ganga\",\"Yamuna\",\"Yamuna\", \"\"));\n    // this.qArray.push(new Question(6,\"Which country has passed a bill to promote the legacies of Gandhi and Martin Luther King Jr\",\"India\",\"USA\",\"UK\",\"Austrailia\",\"Austrailia\", \"\"));\n    // this.qArray.push(new Question(7,\"The Indian Government has imposed safeguard duty on which product till July 2021, to protect domestic manufacturers\",\"Medical devices\",\n    // \"Solar cells\", \"Textile\", \"Electronics\",\"Electronics\", \"\")); \n    // this.qArray.push(new Question(8,\"The territory of Porus who offered strong resistance to Alexander was situated between the rivers of    \", \"Sutlej and Beas\",\n    // \"Jhelum and Chenab\", \"Ravi and Chenab\", \"Ganga and Yamuna\",\"Ganga and Yamuna\", \"\"));\n    // this.qArray.push(new Question(9,\"Tripitakas are sacred books of\",\"Buddhists\",\"Hindus\",\"Jains\",\"None\",\"Buddhists\", \"\"));\n    // this.qArray.push(new Question(10,\"The theory of economic drain of India during British imperialism was propounded by\",\t\"Jawaharlal Nehru\",\n    // \"Dadabhai Naoroji\", \"R.C. Dutt\", \"M.K. Gandhi\",\"M.K. Gandhi\", \"\"));\n\n  }\n  setqArray(p1)\n  {\n    this.qArray=p1;\n  }\n  getAllQuestions()\n  {\n    return this.qArray;\n  }\n  getQuestionById(qId:number)\n  {\n    var pos=this.qArray.findIndex(item=>item.qNo==qId);\n    return this.qArray[pos];\n  }\n  saveAnswer(qId:number, userAnswer:string)\n  {\n    this.qArray[qId-1].selectedAnswer=userAnswer;\n    // this.selectAnsArray.push({qNo:qId, userAnswer:userAnswer});\n    // console.log(this.selectAnsArray);\n  }\n  // getAllAnswer()\n  // {\n  //   return this.selectAnsArray;\n  // }\n  calculateScore()\n  {\n    var score=0;\n\n    \n    for(let i=0; i<this.qArray.length; i++)\n    {\n      console.log(this.qArray[i].selectedAnswer)\n      console.log(this.qArray[i].correctAns)\n      if(this.qArray[i].selectedAnswer==this.qArray[i].correctAns)\n      {\n        score++;\n      }\n    }\n\n    // for(let i=0; i<this.qArray.length; i++)\n    // {\n    //   var tempObj=this.selectAnsArray.find(item=>item.qNo === this.qArray[i].qNo);\n      \n    //   if(this.qArray[i].correctAns===tempObj.userAnswer)\n    //   {\n    //     score++;\n    //   }\n      \n    // }\n    return score;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { ManageQuestionsService } from './../manage-questions.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n  score:number;\n  constructor(public activatedRoute: ActivatedRoute, public router:Router,\n    manageQuestion: ManageQuestionsService) {\n      this.score=manageQuestion.calculateScore()\n     }\n\n  ngOnInit(): void {\n    // this.score=parseInt(this.activatedRoute.snapshot.paramMap.get(\"marks\"));\n  }\n\n  clickEventHandler()\n  {\n    this.router.navigateByUrl('/login');\n  }\n\n}\n","\n<div class=\"container mt-5\" >\n    <div class=\"row mt-2 ml-2\">\n        <div class=\"col\">\n            <h1 id=\"site\">Hack India</h1>\n        </div>\n    </div>\n\n    <div class=\"text-center \" style=\"margin-top: 50px;  border:black solid 2px \">\n        <h1 class=\"mt-2\" style=\"color: rgb(153, 0, 255)\">Thanks for taking the test</h1>\n\n        <h1>Final Result ={{score}}</h1>\n        <div *ngIf=\"score<7; then ifTemplate; else elseTemplate\" >\n\n        </div>\n        <ng-template #ifTemplate>\n            <h1 style=\"color:crimson\">Sorry, You have failed the test. </h1>\n        </ng-template>\n        <ng-template #elseTemplate>\n            <h1 style=\"color:darkgreen\">Congratulations you have successfully passed the Test</h1> \n        </ng-template>\n\n\n        <div class=\"row mt-4 mb-4\">\n            <div class=\"col-2 offset-5 \">\n                <input type=\"button\" class=\"btn btn-primary \" id=\"btn\" value=\"Return to Login Page\"\n                (click)=\"clickEventHandler()\">\n            </div>\n        </div>\n\n    </div>\n</div>\n\n\n\n<!-- <p>result works!</p>\n<div class=\"container-fluid\">\n    <div class=\"row mt-2 ml-2\">\n        <div class=\"col\">\n            <h1 id=\"site\">Hack India</h1>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-4\">\n    <div class=\"col-4 offset-4 \" id='res'>\n        <p>Your Score : {{score}}</p>\n    </div>\n</div>\n\n<div class=\"text-center\" *ngIf=\"score<5; then ifTemplate; else elseTemplate\" >\n\n</div>\n<ng-template #ifTemplate>\n<h1 style=\"color:crimson\">Sorry, You Won't be able to go for further rounds </h1>\n</ng-template>\n<ng-template #elseTemplate>\n\n   <h1 style=\"color:darkgreen\">Congratulations you Have Passed the Test</h1> \n</ng-template>\n\n<div class=\"row mt-4\">\n    <div class=\"col-2 offset-5 \">\n        <input type=\"button\" class=\"btn btn-primary \" id=\"btn\" value=\"Return to Login Page\"\n        (click)=\"clickEventHandler()\">\n    </div>\n</div>\n -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule, FormGroup,  FormControl, Validators } from '@angular/forms';\nimport {confirmPasswordValidator} from '../confirmPasswordValidator';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  loginForm = new FormGroup({\n    userName:new FormControl(\"\", Validators.required),\n    password: new FormControl(\"\", [Validators.required, Validators.pattern(/[^0-9a-zA-Z]/), Validators.minLength(8)]),\n    email:new FormControl(\"\", [Validators.required, Validators.email]),\n    firstName:new FormControl(\"\", Validators.required),\n    confirmPassword: new FormControl(\"\",Validators.required)\n  },\n  {\n    validators:confirmPasswordValidator('password', 'confirmPassword')\n  });\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  registerEventHandler()\n  {\n    this.router.navigateByUrl('/login');\n  }\n\n}\n","<!-- <p>sign-up works!</p> -->\n\n<div class=\"container \" id=\"full\">\n    <div   id=\"login\">\n        <div id=\"loginsection\">\n           \n            <div>\n                <h1 id=\"heading\" >Hack India</h1>\n            </div>\n            <div>\n                <p class=\"text-center\" id=\"txt\"> <b>Registration Form</b> </p>\n            </div>\n    \n            <form [formGroup]=\"loginForm\">\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"firstName\">First Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\">\n\n                        <div *ngIf=\"loginForm.get('firstName').errors?.required && (loginForm.get('firstName').touched || !loginForm.get('firstName').pristine)\">\n                            <p id='cb2'> First Name is required.</p>\n                        </div>\n\n                    </div>\n\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"lastName\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"Last Name\">\n                    </div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" id=\"email\" placeholder=\"abc@xyz.com\">\n\n                        <div *ngIf=\"loginForm.get('email').errors?.required && (loginForm.get('email').touched || !loginForm.get('email').pristine)\">\n                            <p id='cb2'> Email is required.</p>\n                        </div>\n                        <div *ngIf=\"loginForm.get('email').errors?.email && (loginForm.get('email').touched || !loginForm.get('email').pristine)\">\n                            <p id='cb2'> Enter a valid email address.</p>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\">\n\n                        <div *ngIf=\"loginForm.get('password').errors?.required && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                            <p id='cb2'> Password is required. </p>\n                        </div>\n                        <div *ngIf=\"loginForm.get('password').errors?.minlength && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                            <p id='cb2'> Minimum length of password must be 8. </p>\n                        </div>\n                        <div *ngIf=\"!loginForm.get('password').errors?.minlength && loginForm.get('password').errors?.pattern\" >\n                            <p id='cb2'> Password must contain a special character. </p>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"userName\">Username</label>\n                        <input type=\"text\" formControlName=\"userName\" name=\"userName\" class=\"form-control\" \n                        id=\"userName\" placeholder=\"Enter unique username\">\n                        \n                        <div *ngIf=\"loginForm.get('userName').errors?.required && (loginForm.get('userName').touched || !loginForm.get('userName').pristine)\">\n                            <p id='cb2'> Username is required.</p>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"confirmPassword\">Confirm Password</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"confirmPassword\" name=\"confirmPassword\" \n                        id=\"confirmPassword\" placeholder=\"Password\">\n\n                        <div *ngIf=\"loginForm.errors?.confirmPasswordValidator \">\n                            <p id='cb2'> Password field does not match.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"college\">College</label>\n                        <input type=\"text\" class=\"form-control\" id=\"college\" placeholder=\"College\">\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"cgpa\">CGPA</label>\n                        <input type=\"number\" class=\"form-control\" id=\"cgpa\" placeholder=\"7.5\">\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"address\">Address</label>\n                    <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"97, Mahaveer Nagar\">\n                </div>\n        \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"city\">City</label>\n                        <input type=\"text\" class=\"form-control\" id=\"city\" placeholder=\"Jaipur\">\n                    </div>\n                    <div class=\"form-group col-md-4 col-sm-12\">\n                        <label for=\"state\">State</label>\n                        <input type=\"text\" class=\"form-control\" id=\"state\" placeholder=\"Rajasthan\">\n                    </div>\n                    <div class=\"form-group col-md-2 col-sm-12\">\n                        <label for=\"pincode\">Pin Code</label>\n                        <input type=\"number\" class=\"form-control\" id=\"pincode\" placeholder=\"322001\">\n                    </div>\n                </div>\n    \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"experience\">Experience in Years</label>\n                        <input type=\"number\" class=\"form-control\" id=\"experience\" placeholder=\"2\">\n                    </div>\n                    <div class=\"form-group col-md-6 col-sm-12\">\n                        <label for=\"inputEmail4\">Position</label>\n                        <select class=\"custom-select\">\n                            <option selected>Select the Position you want to Apply For</option>\n                            <option value=\"1\">SDE-1</option>\n                            <option value=\"2\">SDE-2</option>\n                            <option value=\"3\">HR</option>\n                            <option value=\"4\">Inside Sales</option>\n                            <option value=\"5\">Project Manager</option>\n                            <option value=\"6\">Intern</option>\n                        </select>\n                    </div>\n\n                </div>\n    \n                <div class=\"form-group\">\n                    <label for=\"resume\">Upload Resume</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"resume\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]= \"!loginForm.valid\"\n                (click)=\"registerEventHandler()\">Register</button>\n\n            </form>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n\n  constructor(public router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  startEventHandler()\n  {\n    this.router.navigateByUrl('/test/1');\n  }\n\n}\n","<!-- <p>start works!</p> -->\n\n<div class=\"container-fluid\">\n    <div class=\"row mt-2 ml-2\">\n        <div class=\"col\">\n            <h1 id=\"site\">Hack India</h1>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid mt-4\">\n    <div class=\"row\" >\n        <div class=\"col-6 offset-3\" id=\"ins\">\n            <h3 class=\"mt-2\">Test Instruction</h3>\n            <ol>\n                <li>Duration of test is 30 minutes.</li>\n                <li>Minimum 70% efficiency is necessary for clearing this round.</li>\n                <li>You are not allowed to go back to previous question.</li>\n\n                <li> Ensure that you are attempting the test using the correct email ID.</li>\n                    \n                <li> If you need assistance during the test, click the question mark (?) in the lower-right corner of the page to raise a ticket.</li>\n                    \n                <li>  Once the test has started, the timer cannot be paused. You have to complete the test in one attempt.</li>\n            \n                <li> Do not close the browser window or tab of the test interface before you submit your final answers.</li>\n            \n                <li> It is recommended that you ensure that your system meets SimpliRecruits's compatibility requirements and check your Internet connection before starting the test.</li>\n            \n                <li>It is recommended that you attempt the test in an incognito or private window so that any extensions installed do not interfere with the test environment.</li>\n            \n                <li> We recommend that you close all other windows and tabs to ensure that there are no distractions.</li>\n         \n            </ol>\n\n            <div class=\"text-center\">\n                <input type=\"button\" value=\"Start\" class=\"mb-4 btn\" id='btn' (click)= \"startEventHandler()\">\n            </div>\n            \n        </div>\n    </div>\n    \n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TalkWithDbService {\n  myBaseServerUrl=environment.serverUrl;\n  constructor(public HttpClient:HttpClient) { }\n\n  doUserValidation(obj)\n  {\n    var myServerUrl = this.myBaseServerUrl+\"api/login\";\n    return this.HttpClient.post(myServerUrl, obj);\n  }\n\n  getAllQuestions()\n  {\n    var myServerUrl = this.myBaseServerUrl+\"api/questions\";\n    return this.HttpClient.get(myServerUrl);\n  }\n\n  getAllEmployees()\n  {\n    var myServerUrl = this.myBaseServerUrl+\"api/employees\";\n    return this.HttpClient.get(myServerUrl);\n  }\n}\n\n\n","import { TalkWithDbService } from './../talk-with-db.service';\nimport { ManageQuestionsService } from './../manage-questions.service';\nimport { Question } from './../question';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  currentQNo: number;\n  qArray:Question[] = new Array();\n  selectedRadio:number;\n  marks:number;\n  constructor(public activatedRoute:ActivatedRoute,  public router: Router,\n    public manageQuestion: ManageQuestionsService, public talkWithDbService:TalkWithDbService )\n{\n      this.selectedRadio=-1;\n      this.marks=0;\n      // this.qArray=manageQuestion.getAllQuestions();\n      \n      // this.qArray.push(new Question(1,\"BA stands for\",\"Bachelor of Arts\",\"Btech of Arts\",\"Business Administration\",\"None of these\",1));\n      // this.qArray.push(new Question(2,\"CA stands for\",\"Cause of Account\",\"Clear Account\",\"Character of Account\",\"Chartered Accountant\",4));\n      // this.qArray.push(new Question(3,\"OS stands for\",\"Open System\",\"Operating System\",\"Octal Syatem\",\"None of the above\",2));\n      // this.qArray.push(new Question(4,\"LAN stands for\",\"Local Area Network\",\"Local Air Network\",\"Large Area Network\",\"None of the above\",1));\n      // this.qArray.push(new Question(5,\"FBI stands for\",\"Foreign Bureau of Investigation\",\"Famous Bureau of Investigation\",\"Federal Bureau of Investigation\",\"False Bureau of Investigation\",3));\n      // this.qArray.push(new Question(6,\"HCL stands for\",\"High Computers Limited\",\"House Computers Limited\",\"Human Computers Limited\",\"Hindustan Computers Limited\",4));\n      // this.qArray.push(new Question(7,\"IB stands for\",\"Intelligence Bureau\",\"Intelligence Boss\",\"Inert Bureau\",\"International Bureau\",1));\n      // this.qArray.push(new Question(8,\"IPL stands for\",\"Internation Premier League\",\"Indian Prime League\",\"Indian Premier League\",\"None of the above\",3));\n      // this.qArray.push(new Question(9,\"IQ stands for\",\"Intelligent Question\",\"Intelligence Quotient\",\"International Quotient\",\"International Question\",2));\n      // this.qArray.push(new Question(10,\"WAN stands for\",\"Wide Area Network\",\"Waste Area Network\",\"Wide Air Network\",\"Waste Air Network\",1));\n  }\n\n  ngOnInit(): void {\n    this.talkWithDbService.getAllQuestions()\n      .subscribe(\n        (data)=>{\n          console.log(data);\n          this.qArray=data as Question[];\n          this.manageQuestion.setqArray(this.qArray);\n        },\n        (err)=>{\n          console.log(err);\n        });\n    \n    // this.qArray=this.manageQuestion.getAllQuestions();\n    this.currentQNo = parseInt(this.activatedRoute.snapshot.paramMap.get(\"qId\")); \n  }\n\n  nextEventHandler()\n  {\n    this.currentQNo = parseInt(this.activatedRoute.snapshot.paramMap.get(\"qId\"));\n    var temp=\"option\" +(this.selectedRadio);\n    var userSelectedAnswer= this.qArray[this.currentQNo-1][temp];\n    // console.log(userSelectedAnswer, this.qArray[this.currentQNo-1].correctAns);\n    \n    this.manageQuestion.saveAnswer(this.currentQNo, userSelectedAnswer);\n    \n    // if(this.selectedRadio==this.qArray[this.currentQNo-2].correctAns)\n    // {\n    //   this.marks++;\n    // }\n    this.selectedRadio=-1;\n    this.currentQNo++;\n    if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option1)\n    {\n      this.selectedRadio=1;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option2)\n    {\n      this.selectedRadio=2;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option3)\n    {\n      this.selectedRadio=3;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option4)\n    {\n      this.selectedRadio=4;\n    }\n\n\n    this.router.navigateByUrl('/test/'+this.currentQNo);\n  }\n\n  previousEventHandler()\n  {\n    console.log(\"in previous handler questions are : \",this.qArray);\n    this.currentQNo = parseInt(this.activatedRoute.snapshot.paramMap.get(\"qId\"));\n    var temp=\"option\" +(this.selectedRadio);\n    var userSelectedAnswer= this.qArray[this.currentQNo-1][temp];\n    this.manageQuestion.saveAnswer(this.currentQNo, userSelectedAnswer);\n    console.log(\"before if \",this.selectedRadio);\n    // this.selectedRadio=-1;\n    this.currentQNo--;\n    if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option1)\n    {\n      this.selectedRadio=1;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option2)\n    {\n      this.selectedRadio=2;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option3)\n    {\n      this.selectedRadio=3;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option4)\n    {\n      this.selectedRadio=4;\n    }\n    else\n    {\n      this.selectedRadio=-1;\n    }\n    console.log(\"inside previous button handler\", this.selectedRadio);\n    this.router.navigateByUrl('/test/'+this.currentQNo);\n  }\n\n  flipQuestionEventHandler(p:number)\n  {\n    this.currentQNo = parseInt(this.activatedRoute.snapshot.paramMap.get(\"qId\"));\n    var temp=\"option\" +(this.selectedRadio);\n    var userSelectedAnswer= this.qArray[this.currentQNo-1][temp];\n    this.manageQuestion.saveAnswer(this.currentQNo, userSelectedAnswer);\n\n    this.selectedRadio=-1;\n    this.currentQNo=p;\n    if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option1)\n    {\n      this.selectedRadio=1;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option2)\n    {\n      this.selectedRadio=2;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option3)\n    {\n      this.selectedRadio=3;\n    }\n    else if(this.qArray[this.currentQNo-1].selectedAnswer==this.qArray[this.currentQNo-1].option4)\n    {\n      this.selectedRadio=4;\n    }\n    this.router.navigateByUrl('/test/'+this.currentQNo);\n  }\n\n  submitEventHandler()\n  {\n    // if(this.selectedRadio==this.qArray[this.currentQNo-2].correctAns)\n    // {\n    //   this.marks++;\n    // }\n    var temp=\"option\" +(this.selectedRadio);\n    var userSelectedAnswer= this.qArray[this.currentQNo-1][temp];\n    // console.log(userSelectedAnswer, this.qArray[this.currentQNo-1].correctAns);\n    this.manageQuestion.saveAnswer(this.currentQNo, userSelectedAnswer);\n    this.router.navigateByUrl('/result');\n  }\n  changeEventHandler(p:number)\n  {\n    this.selectedRadio=p;\n  }\n\n}\n","<!-- <p>test works!</p> -->\n\n<div class=\"container-fluid\">\n\n    <div *ngIf=\"qArray.length>0; then ifTemplate; else elseTemplate\"></div>\n    <ng-template #elseTemplate>\n        <div>\n            Loading....\n        </div>\n    </ng-template>\n\n    <ng-template #ifTemplate>\n\n\n\n        <div class=\"container-fluid\">\n            <div class=\"row mt-2 ml-2\">\n                <div class=\"col\">\n                    <h1 id=\"site\">Hack India</h1>\n                </div>\n            </div>\n        </div>\n\n        <!-- <div class=\"container\">\n    <form>\n        <div class=\"form-group\">\n            <label for=\"\"></label>\n        </div>\n    </form>\n</div> -->\n\n\n        <div class=\"container \" id='full'>\n\n            <div class=\"row\">\n                <div class=\"col-md-12 col-sm-12\">\n                    <div class=\"col-md-12 col-sm-12 text-center mt-2\">\n                        <input type=\"button\" id=\"xyz\" style=\"border: 1px solid black\" value=\"1\"\n                            (click)=flipQuestionEventHandler(1)>\n                        <input type=\"button\" id=\"xyz\" value=\"2\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(2)>\n                        <input type=\"button\" id=\"xyz\" value=\"3\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(3)>\n                        <input type=\"button\" id=\"xyz\" value=\"4\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(4)>\n                        <input type=\"button\" id=\"xyz\" value=\"5\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(5)>\n                        <input type=\"button\" id=\"xyz\" value=\"6\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(6)>\n                        <input type=\"button\" id=\"xyz\" value=\"7\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(7)>\n                        <input type=\"button\" id=\"xyz\" value=\"8\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(8)>\n                        <input type=\"button\" id=\"xyz\" value=\"9\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(9)>\n                        <input type=\"button\" id=\"xyz\" value=\"10\" style=\"border: 1px solid black\"\n                            (click)=flipQuestionEventHandler(10)>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row mt-2 mb-4\">\n                <div class=\"col-12 \" style=\"background-color: rgba(47, 79, 79, 0.6); border:2px solid black;\">\n                    <h3 style=\"margin:15px;\"> Question No: {{currentQNo}} </h3>\n                </div>\n            </div>\n\n\n            <p>{{qArray[currentQNo - 1].qText | json}}</p>\n\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" [checked]=\"selectedRadio==1\"\n                        (change)=\"changeEventHandler(1)\">\n                    {{qArray[currentQNo - 1].option1 | json}}\n                </label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" [checked]=\"selectedRadio==2\"\n                        (change)=\"changeEventHandler(2)\">\n                    {{qArray[currentQNo - 1].option2 | json}}\n                </label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" [checked]=\"selectedRadio==3\"\n                        (change)=\"changeEventHandler(3)\">\n                    {{qArray[currentQNo - 1].option3 | json}}\n                </label>\n            </div>\n\n            <div class=\"radio\">\n                <label><input type=\"radio\" name=\"optradio\" [checked]=\"selectedRadio==4\"\n                        (change)=\"changeEventHandler(4)\">\n                    {{qArray[currentQNo - 1].option4 | json}}\n                </label>\n            </div>\n\n            <div class=\"mt-4\">\n                <div class=\"row\">\n                    <div class=\"col-2\" *ngIf=\"currentQNo!=1\">\n                        <input type=\"button\" class=\"mb-4\" id=\"btn2\" value=\"Previous\" (click)=\"previousEventHandler()\">\n                    </div>\n                    <div class=\"col-2\" *ngIf=\"currentQNo!=10\">\n                        <input type=\"button\" class=\"mb-4\" id='btn' value=\"Next\" (click)=\"nextEventHandler()\">\n                    </div>\n                </div>\n\n                <div *ngIf=\"currentQNo==10\">\n                    <input type=\"button\" class=\"mb-4\" id='btn2' value=\"Submit\" (click)=\"submitEventHandler()\">\n                </div>\n            </div>\n\n        </div>\n    </ng-template>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {ageValidator} from '../ageValidatorControl';\nimport {dynamicAgeValidator} from '../dynamicAgeValidatorControl';\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './validation.component.html',\n  styleUrls: ['./validation.component.css']\n})\nexport class ValidationComponent implements OnInit {\n  loginForm = new FormGroup({\n    userName:new FormControl(\"\", Validators.required),\n    password: new FormControl(\"\", [Validators.required, Validators.pattern(/^[0-9a-zA-Z]/), Validators.minLength(8)]),\n    age : new FormControl(\"\", dynamicAgeValidator(30, 50))\n  });\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  loginEventHandler()\n  {\n\n  }\n  signUpEventHandler()\n  {\n\n  }\n\n}\n","<div class=\"container\">\n    <form class=\"row\" [formGroup]=\"loginForm\">\n        <div class=\"form-group col-10 offset-1 mt-4\">\n            <input class=\"form-control\" formControlName=\"userName\" id=\"username\" type=\"text\" name=\"uname\"\n                placeholder=\"Enter your username\">\n\n            <div *ngIf=\"loginForm.get('userName').errors?.required && (loginForm.get('userName').touched || !loginForm.get('userName').pristine)\">\n                Username is required.\n            </div>\n        </div>\n\n        <div class=\"form-group col-10 offset-1\">\n            <input class=\"form-control\" formControlName=\"password\" id=\"password\" type=\"password\" name=\"password\"\n                placeholder=\"Enter your password\">\n\n\n            <div *ngIf=\"loginForm.get('password').errors?.required && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                Password is required.\n            </div>\n            <div *ngIf=\"loginForm.get('password').errors?.minlength && (loginForm.get('password').touched || !loginForm.get('password').pristine)\">\n                Minimum length of password must be 8.\n            </div>\n        </div>\n            \n        <div class=\"form-group col-10 offset-1\">\n            <input class=\"form-control\" formControlName=\"age\" id=\"age\" type=\"number\" name=\"age\"\n                placeholder=\"Enter your age\">\n            <div *ngIf=\"loginForm.get('age').errors?.dynamicAgeValidator && (loginForm.get('age').touched || !loginForm.get('age').pristine)\">\n                Age should bein the range 30 to 50.\n            </div>\n        </div>\n        \n        \n        <div class=\"form-group col-10 offset-1\">\n            <input type=\"checkbox\"><label class=\"ml-1\" id=\"cb\">Remember me</label>\n        </div>\n\n        <div class=\"justify-content around\">\n            <h6 id=\"errormessage\" class=\"ml-5 text-color:wheat\"> </h6>\n        </div>\n\n        <div class=\"form-group col-10 offset-1\">\n            <input class=\"btn btn-info w-100 \" type=\"button\" value=\"Login\" (click)=\"loginEventHandler()\">\n        </div>\n        <div class=\"form-group col-10 offset-1\">\n            <input class=\"btn btn-info w-100\" type=\"button\" value=\"Login with Google\">\n        </div>\n        <div class=\"form-group col-10 offset-1\">\n            <input class=\"btn btn-info w-100\" type=\"button\" value=\"Sign Up\" (click)=\"signUpEventHandler()\">\n        </div>\n    </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl:\"http://localhost:3000/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}